// v 2.0

generator client {
    provider = "prisma-client-js"
}

generator erd {
    provider                  = "prisma-erd-generator"
    output                    = "./SARP_ERD.png"
    theme                     = "neutral"
    tableOnly                 = false
    includeRelationFromFields = false
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model Utente {
    id         Int                @id @default(autoincrement())
    tipo       String             @default("STUDENTE")
    ruolo      String?
    nome       String
    cognome    String
    email      String             @unique
    telefono   String?
    picture    String?
    bes        Boolean?
    istituto   String?
    valuta     pcto_Valutazione[]
    presente   pcto_Presenza[]
    stabilisce pcto_Azienda[]
    iscritto   pcto_Pcto[]

}

model tipo_Utente {
    id   Int    @id @default(autoincrement())
    tipo String
}

model ruolo_Utente {
    id    Int    @id @default(autoincrement())
    ruolo String
}

model pcto_Presenza {
    id           Int       @id @default(autoincrement())
    dataPresenza DateTime  @default(now())
    oraInizio    DateTime?
    oraFine      DateTime?
    presenza     Utente    @relation(fields: [idUtente], references: [id])
    idUtente     Int
    lavoraPer    pcto_Pcto @relation(fields: [idPcto], references: [id])
    idPcto       Int

    // @@id([idPcto, idUtente, data])
}

model pcto_Valutazione {
    utente     Utente    @relation(fields: [idUtente], references: [id])
    idUtente   Int
    pcto       pcto_Pcto @relation(fields: [idPcto], references: [id])
    idPcto     Int
    valutatore String
    voto       Int

    @@id([idUtente, idPcto, valutatore])
}

model pcto_Azienda {
    id              Int         @id @default(autoincrement())
    nome            String
    indirizzo       String?     @unique
    idConvenzione   String?     @unique
    creatoDa        Utente      @relation(fields: [idUtente], references: [id])
    idUtente        Int
    dataConvenzione DateTime    @default(now())
    dataProtocollo  DateTime    @default(now())
    istituto        String      @default("ITT")
    offre           pcto_Pcto[]
}

model pcto_Pcto {
    id            Int                @id @default(autoincrement())
    dataInizio    DateTime?
    dataFine      DateTime?
    titolo        String
    descrizione   String
    offertoDa     pcto_Azienda       @relation(fields: [idAzienda], references: [id])
    idAzienda     Int
    valuta        pcto_Valutazione[]
    presenziatoDa pcto_Presenza[]
    svoltoDa      Utente[]
}
