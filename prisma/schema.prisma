// v 0.1.0

generator client {
    provider = "prisma-client-js"
}

generator erd {
    provider                  = "prisma-erd-generator"
    output                    = "./SARP_ERD.png"
    theme                     = "neutral"
    tableOnly                 = false
    includeRelationFromFields = false
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model Utente {
    id         Int                @id @default(autoincrement())
    createdAt  DateTime           @default(now())
    updatedAt  DateTime           @updatedAt
    tipo       String             @default("STUDENTE")
    ruolo      String?
    nome       String
    cognome    String
    email      String             @unique
    telefono   String?
    picture    String?
    bes        Boolean?
    istituto   String?
    valuta     pcto_Valutazione[]
    presente   pcto_Presenza[]
    stabilisce pcto_Azienda[]
    iscritto   pcto_Pcto[]
}

model tipo_Utente {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    tipo      String
}

model ruolo_Utente {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    ruolo     String
}

model pcto_Presenza {
    id           Int       @id @default(autoincrement())
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
    dataPresenza DateTime  @default(now())
    oraInizio    DateTime?
    oraFine      DateTime?
    presenza     Utente    @relation(fields: [idUtente], references: [id])
    idUtente     Int
    lavoraPer    pcto_Pcto @relation(fields: [idPcto], references: [id])
    idPcto       Int
}

model pcto_Valutazione {
    utente     Utente    @relation(fields: [idUtente], references: [id])
    idUtente   Int
    pcto       pcto_Pcto @relation(fields: [idPcto], references: [id])
    idPcto     Int
    valutatore String
    voto       Int

    @@id([idUtente, idPcto, valutatore])
}

model pcto_Azienda {
    id                Int         @id @default(autoincrement())
    createdAt         DateTime    @default(now())
    updatedAt         DateTime    @updatedAt
    nome              String
    indirizzo         String?
    piva              String?
    telefono          String?
    direttore_nome    String?
    direttore_natoA   String?
    direttore_natoIl  DateTime?
    direttore_codiceF String?
    idConvenzione     String      @unique
    creatoDa          Utente      @relation(fields: [idUtente], references: [id])
    idUtente          Int
    dataConvenzione   DateTime    @default(now())
    dataProtocollo    DateTime    @default(now())
    istituto          String      @default("ITT")
    offre             pcto_Pcto[]
}

model pcto_Pcto {
    id            Int                @id @default(autoincrement())
    createdAt     DateTime           @default(now())
    updatedAt     DateTime           @updatedAt
    titolo        String
    descrizione   String?
    tutor         String?
    dataInizio    DateTime
    dataFine      DateTime
    offertoDa     pcto_Azienda       @relation(fields: [idAzienda], references: [id])
    idAzienda     Int
    valuta        pcto_Valutazione[]
    presenziatoDa pcto_Presenza[]
    svoltoDa      Utente[]
}
