// v 2.0

generator client {
    provider = "prisma-client-js"
}

generator erd {
    provider                  = "prisma-erd-generator"
    output                    = "./SARP_ERD.png"
    theme                     = "neutral"
    tableOnly                 = false
    includeRelationFromFields = false
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model Utente {
    id         Int                @id @default(autoincrement())
    tipo       String             @default("STUDENTE")
    ruolo      String?
    nome       String
    cognome    String
    email      String             @unique
    valuta     PCTO_Valutazione[]
    presente   PCTO_Presenza[]
    stabilisce PCTO_Azienda[]
}

model PCTO_Presenza {
    id        Int       @id @default(autoincrement())
    data      DateTime  @default(now())
    oraInizio DateTime?
    oraFine   DateTime?
    presenza  Utente    @relation(fields: [idUtente], references: [id])
    idUtente  Int
    lavoraPer PCTO_Pcto @relation(fields: [idPcto], references: [id])
    idPcto    Int

    // @@id([idPcto, idUtente, data])
}

model PCTO_Valutazione {
    utente     Utente    @relation(fields: [idUtente], references: [id])
    idUtente   Int
    pcto       PCTO_Pcto @relation(fields: [idPcto], references: [id])
    idPcto     Int
    valutatore String
    voto       Int

    @@id([idUtente, idPcto, valutatore])
}

model PCTO_Azienda {
    id              Int        @id @default(autoincrement())
    nome            String
    indirizzo       String?    @unique
    idConvenzione   String?    @unique
    creatoDa        Utente     @relation(fields: [idUtente], references: [id])
    idUtente        Int
    dataConvenzione DateTime   @default(now())
    dataProtocollo  DateTime   @default(now())
    istituto        String     @default("ITT")
    offre           PCTO_Pcto?
}

model PCTO_Pcto {
    id          Int                @id @default(autoincrement())
    dataInizio  DateTime?
    dataFine    DateTime?
    titolo      String
    descrizione String
    offertoDa   PCTO_Azienda       @relation(fields: [idAzienda], references: [id])
    idAzienda   Int                @unique
    valuta      PCTO_Valutazione[]
    svoltoDa    PCTO_Presenza[]
}
